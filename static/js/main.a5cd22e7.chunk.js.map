{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","helpers.ts","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","setMovie","searchQuery","setSearchQuery","isError","setIsError","isLoading","setIsLoading","htmlFor","type","id","placeholder","cn","value","onChange","event","target","onClick","preventDefault","query","preparedQuery","toLowerCase","trim","fetch","then","res","json","catch","Response","Error","movieData","normalizedMovie","Title","Plot","Poster","imdbID","getNormalizedMovie","finally","disabled","App","setMovies","prevMovies","find","m","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5cd22e7.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { Movie } from './types/Movie';\nimport { MovieData } from './types/MovieData';\n\n// eslint-disable-next-line max-len\nconst defaultImgUrl = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\nexport const getNormalizedMovie = (movie: MovieData): Movie => ({\n  title: movie.Title,\n  description: movie.Plot,\n\n  imgUrl: movie.Poster !== 'N/A'\n    ? movie.Poster\n    : defaultImgUrl,\n\n  imdbUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n  imdbId: movie.imdbID,\n});\n","import { FC, useState } from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { getNormalizedMovie } from '../../helpers';\nimport { MovieData } from '../../types/MovieData';\n\ninterface Props {\n  addMovie: (movie: Movie) => void;\n}\n\nexport const FindMovie: FC<Props> = ({ addMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isError, setIsError] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const findMovie = (event: React.FormEvent) => {\n    event.preventDefault();\n    const preparedQuery = searchQuery.toLowerCase().trim();\n\n    setIsLoading(true);\n\n    getMovie(preparedQuery)\n      .then((movieData) => {\n        if ('Response' in movieData && movieData.Response === 'False') {\n          setIsError(true);\n        } else {\n          const normalizedMovie = getNormalizedMovie(movieData as MovieData);\n\n          setMovie(normalizedMovie);\n          setIsError(false);\n        }\n      })\n      .catch(() => {\n        setIsError(true);\n        setMovie(null);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handleAddButton = () => {\n    if (movie) {\n      addMovie(movie);\n      setSearchQuery('');\n      setMovie(null);\n    } else {\n      // eslint-disable-next-line no-useless-return\n      return;\n    }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setSearchQuery(value);\n\n    if (isError && value !== '') {\n      setIsError(false);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', {\n                'is-danger': isError,\n              })}\n              value={searchQuery}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', {\n                'is-loading': isLoading,\n              })}\n              onClick={findMovie}\n              disabled={!searchQuery.trim()}\n            >\n              {movie\n                ? 'Search again'\n                : 'Find a movie'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddButton}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=84185ef4';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    setMovies((prevMovies) => {\n      if (prevMovies.find((m: Movie) => m.imdbId === movie?.imdbId)) {\n        return prevMovies;\n      }\n\n      return [...prevMovies, movie];\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}